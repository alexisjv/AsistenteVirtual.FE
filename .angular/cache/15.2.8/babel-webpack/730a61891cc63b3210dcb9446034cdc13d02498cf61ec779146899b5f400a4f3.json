{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { TemplateRef, Component, ChangeDetectionStrategy, Input, EventEmitter, Directive, Output, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject, fromEvent } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { takeUntil, first } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nfunction MdbPopoverComponent_h3_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.title, \" \");\n  }\n}\nfunction MdbPopoverComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementContainer(1, 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.content);\n  }\n}\nfunction MdbPopoverComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.content, \" \");\n  }\n}\nclass MdbPopoverComponent {\n  constructor(_cdRef) {\n    this._cdRef = _cdRef;\n    this._hidden = new Subject();\n    this.animationState = 'hidden';\n  }\n  get isContentTemplate() {\n    return this.content instanceof TemplateRef;\n  }\n  markForCheck() {\n    this._cdRef.markForCheck();\n  }\n  onAnimationEnd(event) {\n    if (event.toState === 'hidden') {\n      this._hidden.next();\n    }\n  }\n}\nMdbPopoverComponent.ɵfac = function MdbPopoverComponent_Factory(t) {\n  return new (t || MdbPopoverComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nMdbPopoverComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MdbPopoverComponent,\n  selectors: [[\"mdb-popover\"]],\n  inputs: {\n    title: \"title\",\n    content: \"content\",\n    animation: \"animation\"\n  },\n  decls: 4,\n  vars: 5,\n  consts: [[1, \"popover\"], [\"class\", \"popover-header\", 4, \"ngIf\"], [\"class\", \"popover-body\", 4, \"ngIf\"], [1, \"popover-header\"], [1, \"popover-body\"], [3, \"ngTemplateOutlet\"]],\n  template: function MdbPopoverComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"@fade.done\", function MdbPopoverComponent_Template_div_animation_fade_done_0_listener($event) {\n        return ctx.onAnimationEnd($event);\n      });\n      i0.ɵɵtemplate(1, MdbPopoverComponent_h3_1_Template, 2, 1, \"h3\", 1);\n      i0.ɵɵtemplate(2, MdbPopoverComponent_div_2_Template, 2, 1, \"div\", 2);\n      i0.ɵɵtemplate(3, MdbPopoverComponent_div_3_Template, 2, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@fade\", ctx.animationState)(\"@.disabled\", !ctx.animation);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isContentTemplate);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isContentTemplate);\n    }\n  },\n  dependencies: [i1.NgIf, i1.NgTemplateOutlet],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('fade', [state('visible', style({\n      opacity: 1\n    })), state('hidden', style({\n      opacity: 0\n    })), transition('visible <=> hidden', animate('150ms linear')), transition(':enter', animate('150ms linear'))])]\n  },\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbPopoverComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mdb-popover',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [trigger('fade', [state('visible', style({\n        opacity: 1\n      })), state('hidden', style({\n        opacity: 0\n      })), transition('visible <=> hidden', animate('150ms linear')), transition(':enter', animate('150ms linear'))])],\n      template: \"<div\\n  class=\\\"popover\\\"\\n  [@fade]=\\\"animationState\\\"\\n  (@fade.done)=\\\"onAnimationEnd($event)\\\"\\n  [@.disabled]=\\\"!animation\\\"\\n>\\n  <h3 *ngIf=\\\"title\\\" class=\\\"popover-header\\\">\\n    {{ title }}\\n  </h3>\\n  <div *ngIf=\\\"isContentTemplate\\\" class=\\\"popover-body\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"$any(content)\\\"></ng-container>\\n  </div>\\n  <div *ngIf=\\\"!isContentTemplate\\\" class=\\\"popover-body\\\">\\n    {{ content }}\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    title: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }]\n  });\n})();\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass MdbPopoverDirective {\n  constructor(_overlay, _overlayPositionBuilder, _elementRef) {\n    this._overlay = _overlay;\n    this._overlayPositionBuilder = _overlayPositionBuilder;\n    this._elementRef = _elementRef;\n    this.mdbPopover = '';\n    this.mdbPopoverTitle = '';\n    this._popoverDisabled = false;\n    this.placement = 'top';\n    this._animation = false;\n    this.trigger = 'click';\n    this.delayShow = 0;\n    this.delayHide = 0;\n    this.offset = 4;\n    this.popoverShow = new EventEmitter();\n    this.popoverShown = new EventEmitter();\n    this.popoverHide = new EventEmitter();\n    this.popoverHidden = new EventEmitter();\n    this._open = false;\n    this._showTimeout = 0;\n    this._hideTimeout = 0;\n    this._destroy$ = new Subject();\n  }\n  get popoverDisabled() {\n    return this._popoverDisabled;\n  }\n  set popoverDisabled(value) {\n    this._popoverDisabled = coerceBooleanProperty(value);\n  }\n  get animation() {\n    return this._animation;\n  }\n  set animation(value) {\n    this._animation = coerceBooleanProperty(value);\n  }\n  ngOnInit() {\n    if (this.popoverDisabled || this.mdbPopover === '' && this.mdbPopoverTitle === '') {\n      return;\n    }\n    this._bindTriggerEvents();\n  }\n  ngOnDestroy() {\n    if (this._open) {\n      this.hide();\n    }\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n  _bindTriggerEvents() {\n    const triggers = this.trigger.split(' ');\n    triggers.forEach(trigger => {\n      if (trigger === 'click') {\n        fromEvent(this._elementRef.nativeElement, trigger).pipe(takeUntil(this._destroy$)).subscribe(() => this.toggle());\n      } else if (trigger !== 'manual') {\n        const evIn = trigger === 'hover' ? 'mouseenter' : 'focusin';\n        const evOut = trigger === 'hover' ? 'mouseleave' : 'focusout';\n        fromEvent(this._elementRef.nativeElement, evIn).pipe(takeUntil(this._destroy$)).subscribe(() => this.show());\n        fromEvent(this._elementRef.nativeElement, evOut).pipe(takeUntil(this._destroy$)).subscribe(() => this.hide());\n      }\n    });\n  }\n  _createOverlayConfig() {\n    const positionStrategy = this._overlayPositionBuilder.flexibleConnectedTo(this._elementRef).withPositions(this._getPosition()).withPush(false);\n    const overlayConfig = new OverlayConfig({\n      hasBackdrop: false,\n      scrollStrategy: this._overlay.scrollStrategies.reposition(),\n      positionStrategy\n    });\n    return overlayConfig;\n  }\n  _createOverlay() {\n    this._overlayRef = this._overlay.create(this._createOverlayConfig());\n  }\n  _getPosition() {\n    let position;\n    const positionTop = {\n      originX: 'center',\n      originY: 'top',\n      overlayX: 'center',\n      overlayY: 'bottom',\n      offsetY: -this.offset\n    };\n    const positionBottom = {\n      originX: 'center',\n      originY: 'bottom',\n      overlayX: 'center',\n      overlayY: 'top',\n      offsetY: this.offset\n    };\n    const positionRight = {\n      originX: 'end',\n      originY: 'center',\n      overlayX: 'start',\n      overlayY: 'center',\n      offsetX: this.offset\n    };\n    const positionLeft = {\n      originX: 'start',\n      originY: 'center',\n      overlayX: 'end',\n      overlayY: 'center',\n      offsetX: -this.offset\n    };\n    switch (this.placement) {\n      case 'top':\n        position = [positionTop, positionBottom];\n        break;\n      case 'bottom':\n        position = [positionBottom, positionTop];\n        break;\n      case 'left':\n        position = [positionLeft, positionRight, positionTop, positionBottom];\n        break;\n      case 'right':\n        position = [positionRight, positionLeft, positionTop, positionBottom];\n        break;\n      default:\n        break;\n    }\n    return position;\n  }\n  show() {\n    if (this._hideTimeout) {\n      this._overlayRef.detach();\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = null;\n    }\n    this._createOverlay();\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = null;\n    }\n    this._showTimeout = setTimeout(() => {\n      const tooltipPortal = new ComponentPortal(MdbPopoverComponent);\n      this.popoverShow.emit(this);\n      this._open = true;\n      this._tooltipRef = this._overlayRef.attach(tooltipPortal);\n      this._tooltipRef.instance.content = this.template || this.mdbPopover;\n      this._tooltipRef.instance.title = this.mdbPopoverTitle;\n      this._tooltipRef.instance.animation = this.animation;\n      this._tooltipRef.instance.animationState = 'visible';\n      this._tooltipRef.instance.markForCheck();\n      this.popoverShown.emit(this);\n    }, this.delayShow);\n  }\n  hide() {\n    if (this._showTimeout) {\n      clearTimeout(this._showTimeout);\n      this._showTimeout = null;\n    } else {\n      return;\n    }\n    this._hideTimeout = setTimeout(() => {\n      this.popoverHide.emit(this);\n      if (!this._tooltipRef) {\n        this._overlayRef.detach();\n        this._open = false;\n        this.popoverHidden.emit(this);\n      } else {\n        this._tooltipRef.instance._hidden.pipe(first()).subscribe(() => {\n          this._overlayRef.detach();\n          this._open = false;\n          this.popoverHidden.emit(this);\n        });\n        this._tooltipRef.instance.animationState = 'hidden';\n        this._tooltipRef.instance.markForCheck();\n      }\n    }, this.delayHide);\n  }\n  toggle() {\n    if (this._open) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n}\nMdbPopoverDirective.ɵfac = function MdbPopoverDirective_Factory(t) {\n  return new (t || MdbPopoverDirective)(i0.ɵɵdirectiveInject(i1$1.Overlay), i0.ɵɵdirectiveInject(i1$1.OverlayPositionBuilder), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nMdbPopoverDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MdbPopoverDirective,\n  selectors: [[\"\", \"mdbPopover\", \"\"]],\n  inputs: {\n    mdbPopover: \"mdbPopover\",\n    mdbPopoverTitle: \"mdbPopoverTitle\",\n    popoverDisabled: \"popoverDisabled\",\n    placement: \"placement\",\n    template: \"template\",\n    animation: \"animation\",\n    trigger: \"trigger\",\n    delayShow: \"delayShow\",\n    delayHide: \"delayHide\",\n    offset: \"offset\"\n  },\n  outputs: {\n    popoverShow: \"popoverShow\",\n    popoverShown: \"popoverShown\",\n    popoverHide: \"popoverHide\",\n    popoverHidden: \"popoverHidden\"\n  },\n  exportAs: [\"mdbPopover\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbPopoverDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[mdbPopover]',\n      exportAs: 'mdbPopover'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.Overlay\n    }, {\n      type: i1$1.OverlayPositionBuilder\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    mdbPopover: [{\n      type: Input\n    }],\n    mdbPopoverTitle: [{\n      type: Input\n    }],\n    popoverDisabled: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    animation: [{\n      type: Input\n    }],\n    trigger: [{\n      type: Input\n    }],\n    delayShow: [{\n      type: Input\n    }],\n    delayHide: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    popoverShow: [{\n      type: Output\n    }],\n    popoverShown: [{\n      type: Output\n    }],\n    popoverHide: [{\n      type: Output\n    }],\n    popoverHidden: [{\n      type: Output\n    }]\n  });\n})();\nclass MdbPopoverModule {}\nMdbPopoverModule.ɵfac = function MdbPopoverModule_Factory(t) {\n  return new (t || MdbPopoverModule)();\n};\nMdbPopoverModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MdbPopoverModule\n});\nMdbPopoverModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, OverlayModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbPopoverModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule],\n      declarations: [MdbPopoverDirective, MdbPopoverComponent],\n      exports: [MdbPopoverDirective, MdbPopoverComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbPopoverComponent, MdbPopoverDirective, MdbPopoverModule };\n//# sourceMappingURL=mdb-angular-ui-kit-popover.mjs.map","map":{"version":3,"names":["i0","TemplateRef","Component","ChangeDetectionStrategy","Input","EventEmitter","Directive","Output","NgModule","i1$1","OverlayConfig","OverlayModule","ComponentPortal","trigger","state","style","transition","animate","Subject","fromEvent","i1","CommonModule","takeUntil","first","coerceBooleanProperty","MdbPopoverComponent","constructor","_cdRef","_hidden","animationState","isContentTemplate","content","markForCheck","onAnimationEnd","event","toState","next","ɵfac","ChangeDetectorRef","ɵcmp","NgIf","NgTemplateOutlet","opacity","type","args","selector","changeDetection","OnPush","animations","template","title","animation","MdbPopoverDirective","_overlay","_overlayPositionBuilder","_elementRef","mdbPopover","mdbPopoverTitle","_popoverDisabled","placement","_animation","delayShow","delayHide","offset","popoverShow","popoverShown","popoverHide","popoverHidden","_open","_showTimeout","_hideTimeout","_destroy$","popoverDisabled","value","ngOnInit","_bindTriggerEvents","ngOnDestroy","hide","complete","triggers","split","forEach","nativeElement","pipe","subscribe","toggle","evIn","evOut","show","_createOverlayConfig","positionStrategy","flexibleConnectedTo","withPositions","_getPosition","withPush","overlayConfig","hasBackdrop","scrollStrategy","scrollStrategies","reposition","_createOverlay","_overlayRef","create","position","positionTop","originX","originY","overlayX","overlayY","offsetY","positionBottom","positionRight","offsetX","positionLeft","detach","clearTimeout","setTimeout","tooltipPortal","emit","_tooltipRef","attach","instance","Overlay","OverlayPositionBuilder","ElementRef","ɵdir","exportAs","MdbPopoverModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["C:/Users/Alexis/MIS PROYECTOS/mdb5-free-angular/node_modules/mdb-angular-ui-kit/fesm2020/mdb-angular-ui-kit-popover.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { TemplateRef, Component, ChangeDetectionStrategy, Input, EventEmitter, Directive, Output, NgModule } from '@angular/core';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Subject, fromEvent } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { takeUntil, first } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nclass MdbPopoverComponent {\n    constructor(_cdRef) {\n        this._cdRef = _cdRef;\n        this._hidden = new Subject();\n        this.animationState = 'hidden';\n    }\n    get isContentTemplate() {\n        return this.content instanceof TemplateRef;\n    }\n    markForCheck() {\n        this._cdRef.markForCheck();\n    }\n    onAnimationEnd(event) {\n        if (event.toState === 'hidden') {\n            this._hidden.next();\n        }\n    }\n}\nMdbPopoverComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbPopoverComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMdbPopoverComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.2\", type: MdbPopoverComponent, selector: \"mdb-popover\", inputs: { title: \"title\", content: \"content\", animation: \"animation\" }, ngImport: i0, template: \"<div\\n  class=\\\"popover\\\"\\n  [@fade]=\\\"animationState\\\"\\n  (@fade.done)=\\\"onAnimationEnd($event)\\\"\\n  [@.disabled]=\\\"!animation\\\"\\n>\\n  <h3 *ngIf=\\\"title\\\" class=\\\"popover-header\\\">\\n    {{ title }}\\n  </h3>\\n  <div *ngIf=\\\"isContentTemplate\\\" class=\\\"popover-body\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"$any(content)\\\"></ng-container>\\n  </div>\\n  <div *ngIf=\\\"!isContentTemplate\\\" class=\\\"popover-body\\\">\\n    {{ content }}\\n  </div>\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], animations: [\n        trigger('fade', [\n            state('visible', style({ opacity: 1 })),\n            state('hidden', style({ opacity: 0 })),\n            transition('visible <=> hidden', animate('150ms linear')),\n            transition(':enter', animate('150ms linear')),\n        ]),\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbPopoverComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mdb-popover', changeDetection: ChangeDetectionStrategy.OnPush, animations: [\n                        trigger('fade', [\n                            state('visible', style({ opacity: 1 })),\n                            state('hidden', style({ opacity: 0 })),\n                            transition('visible <=> hidden', animate('150ms linear')),\n                            transition(':enter', animate('150ms linear')),\n                        ]),\n                    ], template: \"<div\\n  class=\\\"popover\\\"\\n  [@fade]=\\\"animationState\\\"\\n  (@fade.done)=\\\"onAnimationEnd($event)\\\"\\n  [@.disabled]=\\\"!animation\\\"\\n>\\n  <h3 *ngIf=\\\"title\\\" class=\\\"popover-header\\\">\\n    {{ title }}\\n  </h3>\\n  <div *ngIf=\\\"isContentTemplate\\\" class=\\\"popover-body\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"$any(content)\\\"></ng-container>\\n  </div>\\n  <div *ngIf=\\\"!isContentTemplate\\\" class=\\\"popover-body\\\">\\n    {{ content }}\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { title: [{\n                type: Input\n            }], content: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }] } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass MdbPopoverDirective {\n    constructor(_overlay, _overlayPositionBuilder, _elementRef) {\n        this._overlay = _overlay;\n        this._overlayPositionBuilder = _overlayPositionBuilder;\n        this._elementRef = _elementRef;\n        this.mdbPopover = '';\n        this.mdbPopoverTitle = '';\n        this._popoverDisabled = false;\n        this.placement = 'top';\n        this._animation = false;\n        this.trigger = 'click';\n        this.delayShow = 0;\n        this.delayHide = 0;\n        this.offset = 4;\n        this.popoverShow = new EventEmitter();\n        this.popoverShown = new EventEmitter();\n        this.popoverHide = new EventEmitter();\n        this.popoverHidden = new EventEmitter();\n        this._open = false;\n        this._showTimeout = 0;\n        this._hideTimeout = 0;\n        this._destroy$ = new Subject();\n    }\n    get popoverDisabled() {\n        return this._popoverDisabled;\n    }\n    set popoverDisabled(value) {\n        this._popoverDisabled = coerceBooleanProperty(value);\n    }\n    get animation() {\n        return this._animation;\n    }\n    set animation(value) {\n        this._animation = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        if (this.popoverDisabled || (this.mdbPopover === '' && this.mdbPopoverTitle === '')) {\n            return;\n        }\n        this._bindTriggerEvents();\n    }\n    ngOnDestroy() {\n        if (this._open) {\n            this.hide();\n        }\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n    _bindTriggerEvents() {\n        const triggers = this.trigger.split(' ');\n        triggers.forEach((trigger) => {\n            if (trigger === 'click') {\n                fromEvent(this._elementRef.nativeElement, trigger)\n                    .pipe(takeUntil(this._destroy$))\n                    .subscribe(() => this.toggle());\n            }\n            else if (trigger !== 'manual') {\n                const evIn = trigger === 'hover' ? 'mouseenter' : 'focusin';\n                const evOut = trigger === 'hover' ? 'mouseleave' : 'focusout';\n                fromEvent(this._elementRef.nativeElement, evIn)\n                    .pipe(takeUntil(this._destroy$))\n                    .subscribe(() => this.show());\n                fromEvent(this._elementRef.nativeElement, evOut)\n                    .pipe(takeUntil(this._destroy$))\n                    .subscribe(() => this.hide());\n            }\n        });\n    }\n    _createOverlayConfig() {\n        const positionStrategy = this._overlayPositionBuilder\n            .flexibleConnectedTo(this._elementRef)\n            .withPositions(this._getPosition())\n            .withPush(false);\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: false,\n            scrollStrategy: this._overlay.scrollStrategies.reposition(),\n            positionStrategy,\n        });\n        return overlayConfig;\n    }\n    _createOverlay() {\n        this._overlayRef = this._overlay.create(this._createOverlayConfig());\n    }\n    _getPosition() {\n        let position;\n        const positionTop = {\n            originX: 'center',\n            originY: 'top',\n            overlayX: 'center',\n            overlayY: 'bottom',\n            offsetY: -this.offset,\n        };\n        const positionBottom = {\n            originX: 'center',\n            originY: 'bottom',\n            overlayX: 'center',\n            overlayY: 'top',\n            offsetY: this.offset,\n        };\n        const positionRight = {\n            originX: 'end',\n            originY: 'center',\n            overlayX: 'start',\n            overlayY: 'center',\n            offsetX: this.offset,\n        };\n        const positionLeft = {\n            originX: 'start',\n            originY: 'center',\n            overlayX: 'end',\n            overlayY: 'center',\n            offsetX: -this.offset,\n        };\n        switch (this.placement) {\n            case 'top':\n                position = [positionTop, positionBottom];\n                break;\n            case 'bottom':\n                position = [positionBottom, positionTop];\n                break;\n            case 'left':\n                position = [positionLeft, positionRight, positionTop, positionBottom];\n                break;\n            case 'right':\n                position = [positionRight, positionLeft, positionTop, positionBottom];\n                break;\n            default:\n                break;\n        }\n        return position;\n    }\n    show() {\n        if (this._hideTimeout) {\n            this._overlayRef.detach();\n            clearTimeout(this._hideTimeout);\n            this._hideTimeout = null;\n        }\n        this._createOverlay();\n        if (this._hideTimeout) {\n            clearTimeout(this._hideTimeout);\n            this._hideTimeout = null;\n        }\n        this._showTimeout = setTimeout(() => {\n            const tooltipPortal = new ComponentPortal(MdbPopoverComponent);\n            this.popoverShow.emit(this);\n            this._open = true;\n            this._tooltipRef = this._overlayRef.attach(tooltipPortal);\n            this._tooltipRef.instance.content = this.template || this.mdbPopover;\n            this._tooltipRef.instance.title = this.mdbPopoverTitle;\n            this._tooltipRef.instance.animation = this.animation;\n            this._tooltipRef.instance.animationState = 'visible';\n            this._tooltipRef.instance.markForCheck();\n            this.popoverShown.emit(this);\n        }, this.delayShow);\n    }\n    hide() {\n        if (this._showTimeout) {\n            clearTimeout(this._showTimeout);\n            this._showTimeout = null;\n        }\n        else {\n            return;\n        }\n        this._hideTimeout = setTimeout(() => {\n            this.popoverHide.emit(this);\n            if (!this._tooltipRef) {\n                this._overlayRef.detach();\n                this._open = false;\n                this.popoverHidden.emit(this);\n            }\n            else {\n                this._tooltipRef.instance._hidden.pipe(first()).subscribe(() => {\n                    this._overlayRef.detach();\n                    this._open = false;\n                    this.popoverHidden.emit(this);\n                });\n                this._tooltipRef.instance.animationState = 'hidden';\n                this._tooltipRef.instance.markForCheck();\n            }\n        }, this.delayHide);\n    }\n    toggle() {\n        if (this._open) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    }\n}\nMdbPopoverDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbPopoverDirective, deps: [{ token: i1$1.Overlay }, { token: i1$1.OverlayPositionBuilder }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMdbPopoverDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.2\", type: MdbPopoverDirective, selector: \"[mdbPopover]\", inputs: { mdbPopover: \"mdbPopover\", mdbPopoverTitle: \"mdbPopoverTitle\", popoverDisabled: \"popoverDisabled\", placement: \"placement\", template: \"template\", animation: \"animation\", trigger: \"trigger\", delayShow: \"delayShow\", delayHide: \"delayHide\", offset: \"offset\" }, outputs: { popoverShow: \"popoverShow\", popoverShown: \"popoverShown\", popoverHide: \"popoverHide\", popoverHidden: \"popoverHidden\" }, exportAs: [\"mdbPopover\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbPopoverDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    // eslint-disable-next-line @angular-eslint/directive-selector\n                    selector: '[mdbPopover]',\n                    exportAs: 'mdbPopover',\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i1$1.OverlayPositionBuilder }, { type: i0.ElementRef }]; }, propDecorators: { mdbPopover: [{\n                type: Input\n            }], mdbPopoverTitle: [{\n                type: Input\n            }], popoverDisabled: [{\n                type: Input\n            }], placement: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], animation: [{\n                type: Input\n            }], trigger: [{\n                type: Input\n            }], delayShow: [{\n                type: Input\n            }], delayHide: [{\n                type: Input\n            }], offset: [{\n                type: Input\n            }], popoverShow: [{\n                type: Output\n            }], popoverShown: [{\n                type: Output\n            }], popoverHide: [{\n                type: Output\n            }], popoverHidden: [{\n                type: Output\n            }] } });\n\nclass MdbPopoverModule {\n}\nMdbPopoverModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbPopoverModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMdbPopoverModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbPopoverModule, declarations: [MdbPopoverDirective, MdbPopoverComponent], imports: [CommonModule, OverlayModule], exports: [MdbPopoverDirective, MdbPopoverComponent] });\nMdbPopoverModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbPopoverModule, imports: [CommonModule, OverlayModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbPopoverModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule],\n                    declarations: [MdbPopoverDirective, MdbPopoverComponent],\n                    exports: [MdbPopoverDirective, MdbPopoverComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbPopoverComponent, MdbPopoverDirective, MdbPopoverModule };\n//# sourceMappingURL=mdb-angular-ui-kit-popover.mjs.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}