{"ast":null,"code":"import { Subject, fromEvent } from 'rxjs';\nimport * as i3 from '@angular/cdk/portal';\nimport { CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Inject, ViewChild, HostBinding, HostListener, TemplateRef, Injector, Injectable, NgModule } from '@angular/core';\nimport { filter, takeUntil, take } from 'rxjs/operators';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nconst _c0 = [\"dialog\"];\nconst _c1 = [\"content\"];\nfunction MdbModalContainerComponent_ng_template_4_Template(rf, ctx) {}\nconst _c2 = function (a0) {\n  return {\n    \"rounded-0\": a0\n  };\n};\nclass MdbModalConfig {\n  constructor() {\n    this.animation = true;\n    this.backdrop = true;\n    this.ignoreBackdropClick = false;\n    this.keyboard = true;\n    this.modalClass = '';\n    this.containerClass = '';\n    this.data = null;\n    this.nonInvasive = false;\n  }\n}\nclass MdbModalRef {\n  constructor(_overlayRef, _container) {\n    this._overlayRef = _overlayRef;\n    this._container = _container;\n    this.onClose$ = new Subject();\n    this.onClose = this.onClose$.asObservable();\n  }\n  close(message) {\n    this._container._close();\n    setTimeout(() => {\n      if (this._container._config.nonInvasive) {\n        this._container._onNonInvasiveModalHidden();\n      }\n      this._container._restoreScrollbar();\n      this.onClose$.next(message);\n      this.onClose$.complete();\n      this._overlayRef.detach();\n      this._overlayRef.dispose();\n    }, this._container.MODAL_TRANSITION);\n  }\n}\n\n// width below which, according to css rules, modal position changes - modal gets position relative instead of absolute.\nconst MODAL_CSS_BREAKPOINT = 992;\nconst MODAL_OPEN_CLASS = 'modal-open';\nconst NON_INVASIVE_CLASS = 'modal-non-invasive-open';\nconst NON_INVASIVE_SHOW_CLASS = 'modal-non-invasive-show';\nclass MdbModalContainerComponent {\n  constructor(_document, _elementRef, _renderer, _focusTrapFactory, _ngZone) {\n    this._document = _document;\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._ngZone = _ngZone;\n    this._destroy$ = new Subject();\n    this.backdropClick$ = new Subject();\n    this.BACKDROP_TRANSITION = 150;\n    this.MODAL_TRANSITION = 200;\n    this.NON_INVASIVE_TRANSITION = 450;\n    this.modal = true;\n    this._isScrollable = false;\n    this._isBottomRight = false;\n    this._isBottomLeft = false;\n    this._isTopRight = false;\n    this._isTopLeft = false;\n    this._isSideTopModal = false;\n    this._isSideBottomModal = false;\n    this._isSideModal = false;\n    this._isModalBottom = false;\n    this._topOffset = 0;\n    this._leftOffset = 0;\n    this._rightOffset = 0;\n    this._bottomOffset = 0;\n  }\n  get hasAnimation() {\n    return this._config.animation;\n  }\n  onWindowResize() {\n    this._ngZone.runOutsideAngular(() => {\n      if (this._config.nonInvasive) {\n        this._handleWindowResize();\n      }\n    });\n  }\n  get host() {\n    return this._elementRef.nativeElement;\n  }\n  ngOnInit() {\n    this._updateContainerClass();\n    this._renderer.setStyle(this.host, 'display', 'block');\n    if (!this._config.nonInvasive) {\n      this._focusTrap = this._focusTrapFactory.create(this.host);\n      this._previouslyFocusedElement = this._document.activeElement;\n    }\n    if (this._config.animation) {\n      setTimeout(() => {\n        this._renderer.addClass(this.host, 'show');\n        setTimeout(() => {\n          this._focusTrap?.focusInitialElementWhenReady();\n        }, this.MODAL_TRANSITION);\n      }, this.BACKDROP_TRANSITION);\n    } else {\n      this._focusTrap?.focusInitialElementWhenReady();\n    }\n  }\n  ngAfterViewInit() {\n    const widthWithVerticalScroll = this._document.body.offsetWidth;\n    this._renderer.addClass(this._document.body, MODAL_OPEN_CLASS);\n    if (this._config.nonInvasive) {\n      this._renderer.addClass(this._document.body, NON_INVASIVE_CLASS);\n      setTimeout(() => {\n        this._onNonInvasiveModalShown();\n      }, this.NON_INVASIVE_TRANSITION);\n    }\n    if (!this._config.nonInvasive) {\n      this._renderer.setStyle(this._document.body, 'overflow', 'hidden');\n    }\n    const widthWithoutVerticalScroll = this._document.body.offsetWidth;\n    if (!this._config.nonInvasive) {\n      this._renderer.setStyle(this._document.body, 'padding-right', `${widthWithoutVerticalScroll - widthWithVerticalScroll}px`);\n    }\n    if (!this._config.ignoreBackdropClick && !this._config.nonInvasive) {\n      fromEvent(this.host, 'mousedown').pipe(filter(event => {\n        const target = event.target;\n        const dialog = this.modalDialog.nativeElement;\n        const notDialog = target !== dialog;\n        const notDialogContent = !dialog.contains(target);\n        return notDialog && notDialogContent;\n      }), takeUntil(this._destroy$)).subscribe(event => {\n        this.backdropClick$.next(event);\n      });\n    }\n  }\n  ngOnDestroy() {\n    this._previouslyFocusedElement?.focus();\n    this._focusTrap?.destroy();\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n  _updateContainerClass() {\n    if (this._config.containerClass === '' || this._config.containerClass.length && this._config.containerClass.length === 0) {\n      return;\n    }\n    const containerClasses = this._config.containerClass.split(' ');\n    containerClasses.forEach(containerClass => {\n      this._renderer.addClass(this.host, containerClass);\n    });\n  }\n  _onNonInvasiveModalShown() {\n    this._isScrollable = this._config.modalClass.includes('modal-dialog-scrollable');\n    this._isBottomRight = this._config.modalClass.includes('modal-bottom-right');\n    this._isBottomLeft = this._config.modalClass.includes('modal-bottom-left');\n    this._isTopRight = this._config.modalClass.includes('modal-top-right');\n    this._isTopLeft = this._config.modalClass.includes('modal-top-left');\n    this._isModalBottom = this._config.modalClass.includes('modal-bottom');\n    this._isSideTopModal = this._isTopLeft || this._isTopRight;\n    this._isSideBottomModal = this._isBottomLeft || this._isBottomRight;\n    this._isSideModal = this._isSideTopModal || this._isSideBottomModal;\n    this._modalContentRect = this.modalContent.nativeElement.getBoundingClientRect();\n    this._modalContentComputedStyles = window.getComputedStyle(this.modalContent.nativeElement);\n    this._modalDialogComputedStyles = window.getComputedStyle(this.modalDialog.nativeElement);\n    this._topOffset = parseInt(this._modalDialogComputedStyles.top, 0);\n    this._leftOffset = parseInt(this._modalDialogComputedStyles.left, 0);\n    this._rightOffset = parseInt(this._modalDialogComputedStyles.right, 0);\n    this._bottomOffset = parseInt(this._modalDialogComputedStyles.bottom, 0);\n    this._renderer.addClass(this.host, NON_INVASIVE_SHOW_CLASS);\n    this._setNonInvasiveStyles();\n  }\n  _setNonInvasiveStyles(leftOffset = 0, topOffset = 0) {\n    const isAboveBreakpoint = window.innerWidth >= MODAL_CSS_BREAKPOINT;\n    this._renderer.setStyle(this.host, 'left', `${this._modalContentRect.left + leftOffset}px`);\n    this._renderer.setStyle(this.host, 'width', this._modalContentComputedStyles.width);\n    if (!this._isScrollable) {\n      // If the modal content is not long enough to require scroll shrink the modal wrapper to\n      // the height of modal content so other elements on site are clickable outside modal\n      this._renderer.setStyle(this.host, 'height', this._modalContentComputedStyles.height);\n      this._renderer.setStyle(this.host, 'display', '');\n    }\n    if (isAboveBreakpoint) {\n      if (this._isSideBottomModal || this._isModalBottom) {\n        // Force modal to correct bottom placement. It's needed because modal host has position\n        // fixed and fixed height.\n        this._renderer.setStyle(this.host, 'top', `${this._modalContentRect.top + topOffset}px`);\n      }\n      if (this._isSideModal) {\n        // Enable horizontal scrolling when the content is wider than the modal's fixed width\n        this._renderer.setStyle(this.host, 'overflowX', 'auto');\n      }\n    }\n  }\n  _onNonInvasiveModalHidden() {\n    this._renderer.removeClass(this.host, NON_INVASIVE_SHOW_CLASS);\n    this._resetNonInvasiveStyles();\n    this._removeNonInvasiveClass();\n  }\n  _resetNonInvasiveStyles() {\n    this._renderer.setStyle(this.host, 'left', '');\n    this._renderer.setStyle(this.host, 'top', '');\n    this._renderer.setStyle(this.host, 'height', '');\n    this._renderer.setStyle(this.host, 'width', '');\n    if (!this._isScrollable) {\n      this._renderer.setStyle(this.host, 'display', '');\n    }\n    if (this._isSideModal) {\n      this._renderer.setStyle(this.host, 'overflowX', '');\n    }\n  }\n  _removeNonInvasiveClass() {\n    const isOtherModalOpen = this._document.body.querySelector('.modal.show.modal-non-invasive-show');\n    if (!isOtherModalOpen) {\n      this._renderer.removeClass(this._document.body, NON_INVASIVE_CLASS);\n    } else {\n      this._renderer.addClass(this._document.body, MODAL_OPEN_CLASS);\n    }\n  }\n  _handleWindowResize() {\n    const modalContent = this.host.querySelector('.modal-content');\n    this._resetNonInvasiveStyles();\n    this._modalContentRect = modalContent.getBoundingClientRect();\n    this._modalContentComputedStyles = window.getComputedStyle(modalContent);\n    if (this._isSideTopModal || this._isSideBottomModal) {\n      let sideOffset = 0;\n      let topOffset = 0;\n      if (this._isBottomRight || this._isBottomLeft) {\n        topOffset = -this._bottomOffset;\n      }\n      if (this._isBottomRight || this._isTopRight) {\n        sideOffset = -this._rightOffset;\n      }\n      if (this._isBottomLeft || this._isTopLeft) {\n        sideOffset = this._leftOffset;\n      }\n      this._setNonInvasiveStyles(sideOffset, topOffset);\n    } else {\n      this._setNonInvasiveStyles();\n    }\n  }\n  _close() {\n    if (this._config.animation) {\n      this._renderer.removeClass(this.host, 'show');\n    }\n    // Pause iframe/video when closing modal\n    const iframeElements = Array.from(this.host.querySelectorAll('iframe'));\n    const videoElements = Array.from(this.host.querySelectorAll('video'));\n    iframeElements.forEach(iframe => {\n      const srcAttribute = iframe.getAttribute('src');\n      this._renderer.setAttribute(iframe, 'src', srcAttribute);\n    });\n    videoElements.forEach(video => {\n      video.pause();\n    });\n  }\n  _restoreScrollbar() {\n    this._renderer.removeClass(this._document.body, MODAL_OPEN_CLASS);\n    this._renderer.removeStyle(this._document.body, 'overflow');\n    this._renderer.removeStyle(this._document.body, 'padding-right');\n  }\n  attachComponentPortal(portal) {\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n  attachTemplatePortal(portal) {\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n}\nMdbModalContainerComponent.ɵfac = function MdbModalContainerComponent_Factory(t) {\n  return new (t || MdbModalContainerComponent)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.ConfigurableFocusTrapFactory), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nMdbModalContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MdbModalContainerComponent,\n  selectors: [[\"mdb-modal-container\"]],\n  viewQuery: function MdbModalContainerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n      i0.ɵɵviewQuery(_c0, 7);\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalDialog = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.modalContent = _t.first);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function MdbModalContainerComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"resize\", function MdbModalContainerComponent_resize_HostBindingHandler($event) {\n        return ctx.onWindowResize($event);\n      }, false, i0.ɵɵresolveWindow);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"modal\", ctx.modal)(\"fade\", ctx.hasAnimation);\n    }\n  },\n  decls: 5,\n  vars: 5,\n  consts: [[\"dialog\", \"\"], [1, \"modal-content\", 3, \"ngClass\"], [\"content\", \"\"], [\"cdkPortalOutlet\", \"\"]],\n  template: function MdbModalContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", null, 0)(2, \"div\", 1, 2);\n      i0.ɵɵtemplate(4, MdbModalContainerComponent_ng_template_4_Template, 0, 0, \"ng-template\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(\"modal-dialog\" + (ctx._config.modalClass ? \" \" + ctx._config.modalClass : \"\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c2, ctx._config.modalClass.includes(\"modal-frame\")));\n    }\n  },\n  dependencies: [i2.NgClass, i3.CdkPortalOutlet],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbModalContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mdb-modal-container',\n      changeDetection: ChangeDetectionStrategy.Default,\n      template: \"<div #dialog [class]=\\\"'modal-dialog' + (_config.modalClass ? ' ' + _config.modalClass : '')\\\">\\n  <div\\n    #content\\n    class=\\\"modal-content\\\"\\n    [ngClass]=\\\"{ 'rounded-0': _config.modalClass.includes('modal-frame') }\\\"\\n  >\\n    <ng-template cdkPortalOutlet></ng-template>\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.ConfigurableFocusTrapFactory\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    _portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet, {\n        static: true\n      }]\n    }],\n    modalDialog: [{\n      type: ViewChild,\n      args: ['dialog', {\n        static: true\n      }]\n    }],\n    modalContent: [{\n      type: ViewChild,\n      args: ['content', {\n        static: true\n      }]\n    }],\n    modal: [{\n      type: HostBinding,\n      args: ['class.modal']\n    }],\n    hasAnimation: [{\n      type: HostBinding,\n      args: ['class.fade']\n    }],\n    onWindowResize: [{\n      type: HostListener,\n      args: ['window:resize', ['$event']]\n    }]\n  });\n})();\nclass MdbModalService {\n  constructor(_document, _overlay, _injector, _cfr) {\n    this._document = _document;\n    this._overlay = _overlay;\n    this._injector = _injector;\n    this._cfr = _cfr;\n  }\n  open(componentOrTemplateRef, config) {\n    const defaultConfig = new MdbModalConfig();\n    config = config ? Object.assign(defaultConfig, config) : defaultConfig;\n    const overlayRef = this._createOverlay(config);\n    const container = this._createContainer(overlayRef, config);\n    const modalRef = this._createContent(componentOrTemplateRef, container, overlayRef, config);\n    this._registerListeners(modalRef, config, container);\n    return modalRef;\n  }\n  _createOverlay(config) {\n    const overlayConfig = this._getOverlayConfig(config);\n    return this._overlay.create(overlayConfig);\n  }\n  _getOverlayConfig(modalConfig) {\n    const config = new OverlayConfig({\n      positionStrategy: this._overlay.position().global(),\n      scrollStrategy: this._overlay.scrollStrategies.noop(),\n      hasBackdrop: modalConfig.nonInvasive ? false : modalConfig.backdrop,\n      backdropClass: 'mdb-backdrop'\n    });\n    return config;\n  }\n  _createContainer(overlayRef, config) {\n    const portal = new ComponentPortal(MdbModalContainerComponent, null, this._injector, this._cfr);\n    const containerRef = overlayRef.attach(portal);\n    containerRef.instance._config = config;\n    return containerRef.instance;\n  }\n  _createContent(componentOrTemplate, container, overlayRef, config) {\n    const modalRef = new MdbModalRef(overlayRef, container);\n    if (componentOrTemplate instanceof TemplateRef) {\n      container.attachTemplatePortal(new TemplatePortal(componentOrTemplate, null, {\n        $implicit: config.data,\n        modalRef\n      }));\n    } else {\n      const injector = this._createInjector(config, modalRef, container);\n      const contentRef = container.attachComponentPortal(new ComponentPortal(componentOrTemplate, config.viewContainerRef, injector));\n      if (config.data) {\n        Object.assign(contentRef.instance, {\n          ...config.data\n        });\n      }\n    }\n    return modalRef;\n  }\n  _createInjector(config, modalRef, container) {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    // The dialog container should be provided as the dialog container and the dialog's\n    // content are created out of the same `ViewContainerRef` and as such, are siblings\n    // for injector purposes. To allow the hierarchy that is expected, the dialog\n    // container is explicitly provided in the injector.\n    const providers = [{\n      provide: MdbModalContainerComponent,\n      useValue: container\n    }, {\n      provide: MdbModalRef,\n      useValue: modalRef\n    }];\n    return Injector.create({\n      parent: userInjector || this._injector,\n      providers\n    });\n  }\n  _registerListeners(modalRef, config, container) {\n    container.backdropClick$.pipe(take(1)).subscribe(() => {\n      modalRef.close();\n    });\n    if (config.keyboard) {\n      fromEvent(container._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n        return event.key === 'Escape';\n      }), take(1)).subscribe(() => {\n        modalRef.close();\n      });\n    }\n  }\n}\nMdbModalService.ɵfac = function MdbModalService_Factory(t) {\n  return new (t || MdbModalService)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.ComponentFactoryResolver));\n};\nMdbModalService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MdbModalService,\n  factory: MdbModalService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbModalService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i1$1.Overlay\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ComponentFactoryResolver\n    }];\n  }, null);\n})();\nclass MdbModalModule {}\nMdbModalModule.ɵfac = function MdbModalModule_Factory(t) {\n  return new (t || MdbModalModule)();\n};\nMdbModalModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MdbModalModule\n});\nMdbModalModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [MdbModalService],\n  imports: [CommonModule, OverlayModule, PortalModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbModalModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, OverlayModule, PortalModule],\n      exports: [MdbModalContainerComponent],\n      declarations: [MdbModalContainerComponent],\n      providers: [MdbModalService]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbModalConfig, MdbModalContainerComponent, MdbModalModule, MdbModalRef, MdbModalService };\n//# sourceMappingURL=mdb-angular-ui-kit-modal.mjs.map","map":{"version":3,"names":["Subject","fromEvent","i3","CdkPortalOutlet","ComponentPortal","TemplatePortal","PortalModule","i0","Component","ChangeDetectionStrategy","Inject","ViewChild","HostBinding","HostListener","TemplateRef","Injector","Injectable","NgModule","filter","takeUntil","take","i2","DOCUMENT","CommonModule","i1","i1$1","OverlayConfig","OverlayModule","MdbModalConfig","constructor","animation","backdrop","ignoreBackdropClick","keyboard","modalClass","containerClass","data","nonInvasive","MdbModalRef","_overlayRef","_container","onClose$","onClose","asObservable","close","message","_close","setTimeout","_config","_onNonInvasiveModalHidden","_restoreScrollbar","next","complete","detach","dispose","MODAL_TRANSITION","MODAL_CSS_BREAKPOINT","MODAL_OPEN_CLASS","NON_INVASIVE_CLASS","NON_INVASIVE_SHOW_CLASS","MdbModalContainerComponent","_document","_elementRef","_renderer","_focusTrapFactory","_ngZone","_destroy$","backdropClick$","BACKDROP_TRANSITION","NON_INVASIVE_TRANSITION","modal","_isScrollable","_isBottomRight","_isBottomLeft","_isTopRight","_isTopLeft","_isSideTopModal","_isSideBottomModal","_isSideModal","_isModalBottom","_topOffset","_leftOffset","_rightOffset","_bottomOffset","hasAnimation","onWindowResize","runOutsideAngular","_handleWindowResize","host","nativeElement","ngOnInit","_updateContainerClass","setStyle","_focusTrap","create","_previouslyFocusedElement","activeElement","addClass","focusInitialElementWhenReady","ngAfterViewInit","widthWithVerticalScroll","body","offsetWidth","_onNonInvasiveModalShown","widthWithoutVerticalScroll","pipe","event","target","dialog","modalDialog","notDialog","notDialogContent","contains","subscribe","ngOnDestroy","focus","destroy","length","containerClasses","split","forEach","includes","_modalContentRect","modalContent","getBoundingClientRect","_modalContentComputedStyles","window","getComputedStyle","_modalDialogComputedStyles","parseInt","top","left","right","bottom","_setNonInvasiveStyles","leftOffset","topOffset","isAboveBreakpoint","innerWidth","width","height","removeClass","_resetNonInvasiveStyles","_removeNonInvasiveClass","isOtherModalOpen","querySelector","sideOffset","iframeElements","Array","from","querySelectorAll","videoElements","iframe","srcAttribute","getAttribute","setAttribute","video","pause","removeStyle","attachComponentPortal","portal","_portalOutlet","attachTemplatePortal","ɵfac","ElementRef","Renderer2","ConfigurableFocusTrapFactory","NgZone","ɵcmp","NgClass","type","args","selector","changeDetection","Default","template","undefined","decorators","static","MdbModalService","_overlay","_injector","_cfr","open","componentOrTemplateRef","config","defaultConfig","Object","assign","overlayRef","_createOverlay","container","_createContainer","modalRef","_createContent","_registerListeners","overlayConfig","_getOverlayConfig","modalConfig","positionStrategy","position","global","scrollStrategy","scrollStrategies","noop","hasBackdrop","backdropClass","containerRef","attach","instance","componentOrTemplate","$implicit","injector","_createInjector","contentRef","viewContainerRef","userInjector","providers","provide","useValue","parent","key","Overlay","ComponentFactoryResolver","ɵprov","MdbModalModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/Alexis/MIS PROYECTOS/mdb5-free-angular/node_modules/mdb-angular-ui-kit/fesm2020/mdb-angular-ui-kit-modal.mjs"],"sourcesContent":["import { Subject, fromEvent } from 'rxjs';\nimport * as i3 from '@angular/cdk/portal';\nimport { CdkPortalOutlet, ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Inject, ViewChild, HostBinding, HostListener, TemplateRef, Injector, Injectable, NgModule } from '@angular/core';\nimport { filter, takeUntil, take } from 'rxjs/operators';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\n\n/* eslint-disable @typescript-eslint/no-inferrable-types */\nclass MdbModalConfig {\n    constructor() {\n        this.animation = true;\n        this.backdrop = true;\n        this.ignoreBackdropClick = false;\n        this.keyboard = true;\n        this.modalClass = '';\n        this.containerClass = '';\n        this.data = null;\n        this.nonInvasive = false;\n    }\n}\n\nclass MdbModalRef {\n    constructor(_overlayRef, _container) {\n        this._overlayRef = _overlayRef;\n        this._container = _container;\n        this.onClose$ = new Subject();\n        this.onClose = this.onClose$.asObservable();\n    }\n    close(message) {\n        this._container._close();\n        setTimeout(() => {\n            if (this._container._config.nonInvasive) {\n                this._container._onNonInvasiveModalHidden();\n            }\n            this._container._restoreScrollbar();\n            this.onClose$.next(message);\n            this.onClose$.complete();\n            this._overlayRef.detach();\n            this._overlayRef.dispose();\n        }, this._container.MODAL_TRANSITION);\n    }\n}\n\n// width below which, according to css rules, modal position changes - modal gets position relative instead of absolute.\nconst MODAL_CSS_BREAKPOINT = 992;\nconst MODAL_OPEN_CLASS = 'modal-open';\nconst NON_INVASIVE_CLASS = 'modal-non-invasive-open';\nconst NON_INVASIVE_SHOW_CLASS = 'modal-non-invasive-show';\nclass MdbModalContainerComponent {\n    constructor(_document, _elementRef, _renderer, _focusTrapFactory, _ngZone) {\n        this._document = _document;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._ngZone = _ngZone;\n        this._destroy$ = new Subject();\n        this.backdropClick$ = new Subject();\n        this.BACKDROP_TRANSITION = 150;\n        this.MODAL_TRANSITION = 200;\n        this.NON_INVASIVE_TRANSITION = 450;\n        this.modal = true;\n        this._isScrollable = false;\n        this._isBottomRight = false;\n        this._isBottomLeft = false;\n        this._isTopRight = false;\n        this._isTopLeft = false;\n        this._isSideTopModal = false;\n        this._isSideBottomModal = false;\n        this._isSideModal = false;\n        this._isModalBottom = false;\n        this._topOffset = 0;\n        this._leftOffset = 0;\n        this._rightOffset = 0;\n        this._bottomOffset = 0;\n    }\n    get hasAnimation() {\n        return this._config.animation;\n    }\n    onWindowResize() {\n        this._ngZone.runOutsideAngular(() => {\n            if (this._config.nonInvasive) {\n                this._handleWindowResize();\n            }\n        });\n    }\n    get host() {\n        return this._elementRef.nativeElement;\n    }\n    ngOnInit() {\n        this._updateContainerClass();\n        this._renderer.setStyle(this.host, 'display', 'block');\n        if (!this._config.nonInvasive) {\n            this._focusTrap = this._focusTrapFactory.create(this.host);\n            this._previouslyFocusedElement = this._document.activeElement;\n        }\n        if (this._config.animation) {\n            setTimeout(() => {\n                this._renderer.addClass(this.host, 'show');\n                setTimeout(() => {\n                    this._focusTrap?.focusInitialElementWhenReady();\n                }, this.MODAL_TRANSITION);\n            }, this.BACKDROP_TRANSITION);\n        }\n        else {\n            this._focusTrap?.focusInitialElementWhenReady();\n        }\n    }\n    ngAfterViewInit() {\n        const widthWithVerticalScroll = this._document.body.offsetWidth;\n        this._renderer.addClass(this._document.body, MODAL_OPEN_CLASS);\n        if (this._config.nonInvasive) {\n            this._renderer.addClass(this._document.body, NON_INVASIVE_CLASS);\n            setTimeout(() => {\n                this._onNonInvasiveModalShown();\n            }, this.NON_INVASIVE_TRANSITION);\n        }\n        if (!this._config.nonInvasive) {\n            this._renderer.setStyle(this._document.body, 'overflow', 'hidden');\n        }\n        const widthWithoutVerticalScroll = this._document.body.offsetWidth;\n        if (!this._config.nonInvasive) {\n            this._renderer.setStyle(this._document.body, 'padding-right', `${widthWithoutVerticalScroll - widthWithVerticalScroll}px`);\n        }\n        if (!this._config.ignoreBackdropClick && !this._config.nonInvasive) {\n            fromEvent(this.host, 'mousedown')\n                .pipe(filter((event) => {\n                const target = event.target;\n                const dialog = this.modalDialog.nativeElement;\n                const notDialog = target !== dialog;\n                const notDialogContent = !dialog.contains(target);\n                return notDialog && notDialogContent;\n            }), takeUntil(this._destroy$))\n                .subscribe((event) => {\n                this.backdropClick$.next(event);\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._previouslyFocusedElement?.focus();\n        this._focusTrap?.destroy();\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n    _updateContainerClass() {\n        if (this._config.containerClass === '' ||\n            (this._config.containerClass.length && this._config.containerClass.length === 0)) {\n            return;\n        }\n        const containerClasses = this._config.containerClass.split(' ');\n        containerClasses.forEach((containerClass) => {\n            this._renderer.addClass(this.host, containerClass);\n        });\n    }\n    _onNonInvasiveModalShown() {\n        this._isScrollable = this._config.modalClass.includes('modal-dialog-scrollable');\n        this._isBottomRight = this._config.modalClass.includes('modal-bottom-right');\n        this._isBottomLeft = this._config.modalClass.includes('modal-bottom-left');\n        this._isTopRight = this._config.modalClass.includes('modal-top-right');\n        this._isTopLeft = this._config.modalClass.includes('modal-top-left');\n        this._isModalBottom = this._config.modalClass.includes('modal-bottom');\n        this._isSideTopModal = this._isTopLeft || this._isTopRight;\n        this._isSideBottomModal = this._isBottomLeft || this._isBottomRight;\n        this._isSideModal = this._isSideTopModal || this._isSideBottomModal;\n        this._modalContentRect = this.modalContent.nativeElement.getBoundingClientRect();\n        this._modalContentComputedStyles = window.getComputedStyle(this.modalContent.nativeElement);\n        this._modalDialogComputedStyles = window.getComputedStyle(this.modalDialog.nativeElement);\n        this._topOffset = parseInt(this._modalDialogComputedStyles.top, 0);\n        this._leftOffset = parseInt(this._modalDialogComputedStyles.left, 0);\n        this._rightOffset = parseInt(this._modalDialogComputedStyles.right, 0);\n        this._bottomOffset = parseInt(this._modalDialogComputedStyles.bottom, 0);\n        this._renderer.addClass(this.host, NON_INVASIVE_SHOW_CLASS);\n        this._setNonInvasiveStyles();\n    }\n    _setNonInvasiveStyles(leftOffset = 0, topOffset = 0) {\n        const isAboveBreakpoint = window.innerWidth >= MODAL_CSS_BREAKPOINT;\n        this._renderer.setStyle(this.host, 'left', `${this._modalContentRect.left + leftOffset}px`);\n        this._renderer.setStyle(this.host, 'width', this._modalContentComputedStyles.width);\n        if (!this._isScrollable) {\n            // If the modal content is not long enough to require scroll shrink the modal wrapper to\n            // the height of modal content so other elements on site are clickable outside modal\n            this._renderer.setStyle(this.host, 'height', this._modalContentComputedStyles.height);\n            this._renderer.setStyle(this.host, 'display', '');\n        }\n        if (isAboveBreakpoint) {\n            if (this._isSideBottomModal || this._isModalBottom) {\n                // Force modal to correct bottom placement. It's needed because modal host has position\n                // fixed and fixed height.\n                this._renderer.setStyle(this.host, 'top', `${this._modalContentRect.top + topOffset}px`);\n            }\n            if (this._isSideModal) {\n                // Enable horizontal scrolling when the content is wider than the modal's fixed width\n                this._renderer.setStyle(this.host, 'overflowX', 'auto');\n            }\n        }\n    }\n    _onNonInvasiveModalHidden() {\n        this._renderer.removeClass(this.host, NON_INVASIVE_SHOW_CLASS);\n        this._resetNonInvasiveStyles();\n        this._removeNonInvasiveClass();\n    }\n    _resetNonInvasiveStyles() {\n        this._renderer.setStyle(this.host, 'left', '');\n        this._renderer.setStyle(this.host, 'top', '');\n        this._renderer.setStyle(this.host, 'height', '');\n        this._renderer.setStyle(this.host, 'width', '');\n        if (!this._isScrollable) {\n            this._renderer.setStyle(this.host, 'display', '');\n        }\n        if (this._isSideModal) {\n            this._renderer.setStyle(this.host, 'overflowX', '');\n        }\n    }\n    _removeNonInvasiveClass() {\n        const isOtherModalOpen = this._document.body.querySelector('.modal.show.modal-non-invasive-show');\n        if (!isOtherModalOpen) {\n            this._renderer.removeClass(this._document.body, NON_INVASIVE_CLASS);\n        }\n        else {\n            this._renderer.addClass(this._document.body, MODAL_OPEN_CLASS);\n        }\n    }\n    _handleWindowResize() {\n        const modalContent = this.host.querySelector('.modal-content');\n        this._resetNonInvasiveStyles();\n        this._modalContentRect = modalContent.getBoundingClientRect();\n        this._modalContentComputedStyles = window.getComputedStyle(modalContent);\n        if (this._isSideTopModal || this._isSideBottomModal) {\n            let sideOffset = 0;\n            let topOffset = 0;\n            if (this._isBottomRight || this._isBottomLeft) {\n                topOffset = -this._bottomOffset;\n            }\n            if (this._isBottomRight || this._isTopRight) {\n                sideOffset = -this._rightOffset;\n            }\n            if (this._isBottomLeft || this._isTopLeft) {\n                sideOffset = this._leftOffset;\n            }\n            this._setNonInvasiveStyles(sideOffset, topOffset);\n        }\n        else {\n            this._setNonInvasiveStyles();\n        }\n    }\n    _close() {\n        if (this._config.animation) {\n            this._renderer.removeClass(this.host, 'show');\n        }\n        // Pause iframe/video when closing modal\n        const iframeElements = Array.from(this.host.querySelectorAll('iframe'));\n        const videoElements = Array.from(this.host.querySelectorAll('video'));\n        iframeElements.forEach((iframe) => {\n            const srcAttribute = iframe.getAttribute('src');\n            this._renderer.setAttribute(iframe, 'src', srcAttribute);\n        });\n        videoElements.forEach((video) => {\n            video.pause();\n        });\n    }\n    _restoreScrollbar() {\n        this._renderer.removeClass(this._document.body, MODAL_OPEN_CLASS);\n        this._renderer.removeStyle(this._document.body, 'overflow');\n        this._renderer.removeStyle(this._document.body, 'padding-right');\n    }\n    attachComponentPortal(portal) {\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    attachTemplatePortal(portal) {\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n}\nMdbModalContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalContainerComponent, deps: [{ token: DOCUMENT }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.ConfigurableFocusTrapFactory }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMdbModalContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.2\", type: MdbModalContainerComponent, selector: \"mdb-modal-container\", host: { listeners: { \"window:resize\": \"onWindowResize($event)\" }, properties: { \"class.modal\": \"this.modal\", \"class.fade\": \"this.hasAnimation\" } }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }, { propertyName: \"modalDialog\", first: true, predicate: [\"dialog\"], descendants: true, static: true }, { propertyName: \"modalContent\", first: true, predicate: [\"content\"], descendants: true, static: true }], ngImport: i0, template: \"<div #dialog [class]=\\\"'modal-dialog' + (_config.modalClass ? ' ' + _config.modalClass : '')\\\">\\n  <div\\n    #content\\n    class=\\\"modal-content\\\"\\n    [ngClass]=\\\"{ 'rounded-0': _config.modalClass.includes('modal-frame') }\\\"\\n  >\\n    <ng-template cdkPortalOutlet></ng-template>\\n  </div>\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalContainerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mdb-modal-container', changeDetection: ChangeDetectionStrategy.Default, template: \"<div #dialog [class]=\\\"'modal-dialog' + (_config.modalClass ? ' ' + _config.modalClass : '')\\\">\\n  <div\\n    #content\\n    class=\\\"modal-content\\\"\\n    [ngClass]=\\\"{ 'rounded-0': _config.modalClass.includes('modal-frame') }\\\"\\n  >\\n    <ng-template cdkPortalOutlet></ng-template>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.ConfigurableFocusTrapFactory }, { type: i0.NgZone }]; }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }], modalDialog: [{\n                type: ViewChild,\n                args: ['dialog', { static: true }]\n            }], modalContent: [{\n                type: ViewChild,\n                args: ['content', { static: true }]\n            }], modal: [{\n                type: HostBinding,\n                args: ['class.modal']\n            }], hasAnimation: [{\n                type: HostBinding,\n                args: ['class.fade']\n            }], onWindowResize: [{\n                type: HostListener,\n                args: ['window:resize', ['$event']]\n            }] } });\n\nclass MdbModalService {\n    constructor(_document, _overlay, _injector, _cfr) {\n        this._document = _document;\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._cfr = _cfr;\n    }\n    open(componentOrTemplateRef, config) {\n        const defaultConfig = new MdbModalConfig();\n        config = config ? Object.assign(defaultConfig, config) : defaultConfig;\n        const overlayRef = this._createOverlay(config);\n        const container = this._createContainer(overlayRef, config);\n        const modalRef = this._createContent(componentOrTemplateRef, container, overlayRef, config);\n        this._registerListeners(modalRef, config, container);\n        return modalRef;\n    }\n    _createOverlay(config) {\n        const overlayConfig = this._getOverlayConfig(config);\n        return this._overlay.create(overlayConfig);\n    }\n    _getOverlayConfig(modalConfig) {\n        const config = new OverlayConfig({\n            positionStrategy: this._overlay.position().global(),\n            scrollStrategy: this._overlay.scrollStrategies.noop(),\n            hasBackdrop: modalConfig.nonInvasive ? false : modalConfig.backdrop,\n            backdropClass: 'mdb-backdrop',\n        });\n        return config;\n    }\n    _createContainer(overlayRef, config) {\n        const portal = new ComponentPortal(MdbModalContainerComponent, null, this._injector, this._cfr);\n        const containerRef = overlayRef.attach(portal);\n        containerRef.instance._config = config;\n        return containerRef.instance;\n    }\n    _createContent(componentOrTemplate, container, overlayRef, config) {\n        const modalRef = new MdbModalRef(overlayRef, container);\n        if (componentOrTemplate instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal(componentOrTemplate, null, {\n                $implicit: config.data,\n                modalRef,\n            }));\n        }\n        else {\n            const injector = this._createInjector(config, modalRef, container);\n            const contentRef = container.attachComponentPortal(new ComponentPortal(componentOrTemplate, config.viewContainerRef, injector));\n            if (config.data) {\n                Object.assign(contentRef.instance, { ...config.data });\n            }\n        }\n        return modalRef;\n    }\n    _createInjector(config, modalRef, container) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        // The dialog container should be provided as the dialog container and the dialog's\n        // content are created out of the same `ViewContainerRef` and as such, are siblings\n        // for injector purposes. To allow the hierarchy that is expected, the dialog\n        // container is explicitly provided in the injector.\n        const providers = [\n            { provide: MdbModalContainerComponent, useValue: container },\n            { provide: MdbModalRef, useValue: modalRef },\n        ];\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n    _registerListeners(modalRef, config, container) {\n        container.backdropClick$.pipe(take(1)).subscribe(() => {\n            modalRef.close();\n        });\n        if (config.keyboard) {\n            fromEvent(container._elementRef.nativeElement, 'keydown')\n                .pipe(filter((event) => {\n                return event.key === 'Escape';\n            }), take(1))\n                .subscribe(() => {\n                modalRef.close();\n            });\n        }\n    }\n}\nMdbModalService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalService, deps: [{ token: DOCUMENT }, { token: i1$1.Overlay }, { token: i0.Injector }, { token: i0.ComponentFactoryResolver }], target: i0.ɵɵFactoryTarget.Injectable });\nMdbModalService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.Overlay }, { type: i0.Injector }, { type: i0.ComponentFactoryResolver }]; } });\n\nclass MdbModalModule {\n}\nMdbModalModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMdbModalModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalModule, declarations: [MdbModalContainerComponent], imports: [CommonModule, OverlayModule, PortalModule], exports: [MdbModalContainerComponent] });\nMdbModalModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalModule, providers: [MdbModalService], imports: [CommonModule, OverlayModule, PortalModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.2\", ngImport: i0, type: MdbModalModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, PortalModule],\n                    exports: [MdbModalContainerComponent],\n                    declarations: [MdbModalContainerComponent],\n                    providers: [MdbModalService],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbModalConfig, MdbModalContainerComponent, MdbModalModule, MdbModalRef, MdbModalService };\n//# sourceMappingURL=mdb-angular-ui-kit-modal.mjs.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}